<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	*변경사항*
	mapper 파일의 완전한 경로 . xml은 생략
	ibatis와는 다르게 id값에 '.'를 사용하지 못함
 -->
<mapper namespace="config.Review">

	<select id="reviewSelectList" parameterType="java.util.Map" resultType="java.util.Map">
		select * from 
		(select t.*, rownum r from 
		(select r.*, m.id, m.PROFILE   
		from review r, planner p,member m
		where r.planner_id=p.planner_id and p.id=m.id 
		order by 
		<if test="order != null">
		r.${order} desc,
		</if>
		r.postdate desc) t ) where r between #{start} and #{end}
	</select>
	
	<select id="reviewGetReviewlistTotal" parameterType="java.util.Map" resultType="int">
		select count(*)
		from review r
		order by postdate desc
	</select>
	
	<!-- (1) reviewlist >review_id>reviewview     (2) reveiwview-series > planner_id / series > reviewview  -->
	<select id="reviewSelectOne"  parameterType="java.util.Map" resultType="reviewDTO" >
		select r.*, id from review r join planner p on r.planner_id=p.planner_id
		<if test="review_id != null">
		where r.review_id=#{review_id}
		</if>
		<if test="planner_id != null">
		where r.planner_id=#{planner_id} and SERIES=#{series}		
		</if>		
	</select>
	
	<select id="reviewSelectPlanner"  parameterType="java.util.Map" resultType="java.util.Map">
		select * from planner where planner_id=#{planner_id}
	</select>
	
	<select id="reviewSelectContent" parameterType="java.util.Map" resultType="contentDTO">
		select * from content where contentid=#{contentid}
	</select>
	
	<select id="reviewGetTotal" parameterType="java.util.Map" resultType="int">
		select count(*) from review 
		<if test="planner_id != null">
		where planner_id=#{planner_id}
		</if>
	</select>
	
	<select id="reviewSelectReviewContent" parameterType="java.util.Map" resultType="java.util.Map">
		select * 
		from (select re.* ,planner_id from review_content re join review v on re.review_id=v.review_id ) r 
		join content c 
		on  r.contentid=c.contentid
		where r.review_id = #{review_id} and r.route_index=#{route_index}
	</select>
	
	<update id="ReviewUpdateContent" parameterType="java.util.Map">
		update review_content set content=#{content} , image=#{image} where re_co_id=#{re_co_id}
	
	</update>
	
	<!-- review -->
	<select id="ReviewHasRating" parameterType="java.util.Map"  resultType="int">
		select count(*) from review_rating where id=#{id} and review_id=#{review_id}
	</select>
	
	<insert id="ReviewInsertRating" parameterType="java.util.Map">
		insert into review_rating (rating_id, riview_id ,id, review_rating) 
		values(SEQ_review_rating_rating_id.nextval, #{review_id}, #{id}, review_rating+#{review_rating})
	</insert>
	
	<!--**********************write comment ***********************-->
	<insert id="reviewInsertComments" parameterType="java.util.Map">
		insert into comments(COMMENT_NO, REVIEW_ID, ID, CONTENT, POSTDATE, REFER, STEP, DEPTH)
		values(SEQ_comments_comment_no.nextval, #{review_id}, #{id}, #{content}, sysdate, SEQ_comments_comment_no.currval, 0, 0)
	</insert>
	
	<!--**********************select comment list **********************-->
	<select id="reviewSelectCommentList" parameterType="java.util.Map" resultType="java.util.Map" >
		select c.* , profile 
		from comments c join member m on c.id=m.id
		where review_id=#{review_id}
		ORDER BY refer desc ,step asc 
	</select>
	
	<!--****************select reivew_conent list *****************  -->
	<select id="reviewSelectReviewContentList" parameterType="java.util.Map" resultType="java.util.Map">
		select * 
		from (select re.* ,planner_id from review_content re join review v on re.review_id=v.review_id ) r 
		join content c 
		on  r.contentid=c.contentid
		where r.review_id = #{review_id}
	</select>
	
	<!-- ***************select photobook layout ******************* -->
	<select id="reviewGetPhotobookLayout" parameterType="java.util.Map" resultType="java.util.Map" >
		select * from photobook where name=#{name} AND imagecount=#{imagecount}
	</select>
	
	<select id="reviewAlreadyLikedReview"  parameterType="java.util.Map" resultType="int" >
		select count(*) from liked_review where review_id=#{review_id} and id=#{id}
	</select>
	
	<insert id="reviewInsertLikedReview" parameterType="java.util.Map" >
		insert into liked_review(LIKED_R_NO, ID, REVIEW_ID)
		values(SEQ_liked_review_liked_r_no.nextval, #{id}, #{review_id} )
	</insert>
	
	<update id="reviewUpdateReveiwRating" parameterType="java.util.Map">
		update review set liked =( rating + (select count(*) from liked_review where review_id=#{review_id})) where review_id=#{review_id}
	</update>
	
</mapper>